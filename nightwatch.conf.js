const {SELENIUM_HOST = 'localhost', SELENIUM_PORT = 4444 } = process.env;

// Autogenerated by Nightwatch
// Refer to the online docs for more details: https://nightwatchjs.org/gettingstarted/configuration/

module.exports = {
  // An array of folders (excluding subfolders) where your tests are located;
  // if this is not specified, the test source must be passed as the second argument to the test runner.
  "src_folders": ["tests"],

  "test_settings": {
    "default": {
      "launch_url": "https://dashboard.syncano.io",
      "selenium_port": +SELENIUM_PORT, //==> подразумеват что селениум уже запущен (исторически сложилось что запускает на порту 4444)
      "selenium_host": SELENIUM_HOST, //==> localhost это alias на 127.0.0.1
      "silent": true,
      "screenshots": {
        "enabled": false,
        "path": ""
      },
      "desiredCapabilities": {
        "version":"87.0",
        "browserName": "chrome",
        "javascriptEnabled": true,
        "acceptSslCerts": true
      }
    }
  }
};

/*if I install npm package globally and push it to github, whoever install it and do npm install -- will not be able to do that
1. ~pwd в терминале показывает путь до текущий рабочей папке
2. relative path=путь от текущей папки до запрашиваемого модуля
3. Когда мы импортируем модуль, сначала он ищет в папке node_modules, а если не находит то ищет глобально
4. require это нативный импорт модуля, импорт перенялся из Java (мнение Дмитрия). Этот синтаксис Java языка. Растет влияине из ООП языков.
5. ЕС5 не было классов, ЕС6 появились классы - через ключевое слово Clas и  constructor 
6. через process.env можно добавлять переменные среды - в том числе selenium_port, selenium_host. то есть создавать
const {SELENIUM_SERVER='localhost', SELENIUM_PORT=4444}=process.env
console.log(SELENIUM_SERVER, SELENIUM_PORT) 
или прописывать значение переменных окружения в терминале а потом вызывать файл

*/
